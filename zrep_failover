#### File: zrep_failover



# run this on 'master' side, to make other side master
zrep_failover(){
	typeset local=0 fs snap="" remotehost remotefs check

	if [[ "$1" == "-L" ]] ; then
		local=1
		shift
	fi

	if [[ "$1" == "" ]] ; then
		usage
		exit 1
	fi

	zfs list $1 >/dev/null || zrep_errquit invalid filesystem $1
	check=`$ZFSGETLVAL ${ZREPTAG}:master $1`
	if [[ "$check" != "yes" ]] ; then
		zrep_errquit $1 not master. Cannot fail over
	fi

	fs="$1"
	
	case $fs in
		*@*)
			snap=$fs
			fs=${srcsnap%@*}
		;;
	esac

	zrep_lock_fs $fs ||zrep_errquit could not lock $fs

	remotehost=`$ZFSGETVAL ${ZREPTAG}:dest-host $fs`
	remotefs=`$ZFSGETVAL ${ZREPTAG}:dest-fs $fs`

	echo Setting readonly on local $fs, then syncing
	zfs set readonly=on $fs

	if ((local ==1)) ; then
		echo Failover for $1 in LOCAL mode
		if [[ "$snap" == "" ]] ; then
			snap=`getlastsnapsent $1`
			zfs list $1 >/dev/null ||
				zrep_errquit No last synced snap found for $1. Cannot fail over
			echo Rolling back to last sync $snap
		else
			echo Rolling back to specified snap $snap
		fi
		zfs rollback -Rr $snap ||zrep_errquit Rollback to $snap failed

	else

		## Need to sync both sides before mode switch!
		## If named snap, roll back.
		## otherwise, "roll forward" by doing one last sync

		if [[ "$snap" != "" ]] ; then
			typeset snapname
			snapname=${snap#*@}

			echo Rolling back to local $snap
			zfs rollback -Rr $snap || zrep_errquit Rollback to $snap failed
			echo Rolling back $remotehost to $remotefs@$snapname
			zrep_ssh $remotehost zfs rollback $remotefs@$snapname ||
				zrep_errquit remote rollback failed

		else
			# makes new snapshot, and syncs 
			_snapandsync $fs $remotehost $remotefs || zrep_errquit final sync failed. failover failed.
		fi


	fi

	echo Reversing master properties for $Z_LOCAL_HOST:$fs

	zfs set ${ZREPTAG}:dest-fs=$fs $fs	
	zfs set ${ZREPTAG}:dest-host=$Z_LOCAL_HOST $fs
	zfs set ${ZREPTAG}:src-fs=$remotefs $fs	
	zfs set ${ZREPTAG}:src-host=$remotehost $fs

	zfs inherit ${ZREPTAG}:master $fs
	
	zrep_unlock_fs $fs

	if (( local ==0)) ;then
		echo Setting master on $remotehost:$remotefs
		zrep_ssh $remotehost $ZREP_PATH takeover -L $remotefs
	fi
	
}

# run this on 'dest' side, to promote it to master
zrep_takeover(){
	typeset fs snap remotehost remotefs check local=0

	if [[ "$1" == "-L" ]] ; then
		local=1
		shift
	fi
	
	if [[ "$1" == "" ]] ; then
		usage
		exit 1
	fi

	fs="$1"

	zfs list $fs >/dev/null || zrep_errquit invalid filesystem $fs

	check=`$ZFSGETLVAL ${ZREPTAG}:master $fs`
	if [[ "$check" = "yes" ]] ; then
		zrep_errquit $fs is already master. Cannot takeover
	fi


	remotehost=`$ZFSGETVAL ${ZREPTAG}:src-host $fs`
	remotefs=`$ZFSGETVAL ${ZREPTAG}:src-fs $fs`


	if (( local == 0 )) ; then

		echo Starting failover from remote side $remotehost
		zrep_ssh $remotehost $ZREP_PATH failover $remotefs
		exit $?
	fi

	# If here, we must be in local mode.
	# So... just set properties!
	# (and roll back, if desired)

	case $fs in
		*@*)
			snap=$fs
			fs=${srcsnap%@*}
		;;
	esac



	zrep_lock_fs $fs
	zfs inherit readonly $fs

	if [[ "$snap" != "" ]] ; then
		echo "WARNING: Before takeover, we will be rolling $fs"
		echo -n "   to  $snapname, made at: "
		$ZFSGETVAL creation $snap
		echo ""
		echo "All newer snapshots will be destroyed"
		echo Continuing in 10 seconds...
		sleep 10

		zfs rollback -Rr $snap || zrep_errquit Rollback to $snap failed
	fi

	echo Setting master properties for $Z_LOCAL_HOST:$fs

	zfs set ${ZREPTAG}:src-fs=$fs $fs	
	zfs set ${ZREPTAG}:src-host=$Z_LOCAL_HOST $fs
	zfs set ${ZREPTAG}:dest-fs=$remotefs $fs	
	zfs set ${ZREPTAG}:dest-host=$remotehost $fs

	zfs set ${ZREPTAG}:master=yes $fs

	# Since we default to creating replicas unmounted... mount it now
	if [[ "`$ZFSGETVAL type $fs`" == "filesystem" ]] ; then
		if [[ "`$ZFSGETVAL mounted $fs`" == "no" ]] ; then
				echo eMounting $Z_LOCAL_HOST:$fs
				zfs mount $fs
		fi
	fi
	
	zrep_unlock_fs $fs
	

}
